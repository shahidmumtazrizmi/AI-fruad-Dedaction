// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow for optimizing payment notifications using AI.
 *
 * - paymentNotificationOptimization - A function that optimizes payment notifications.
 * - PaymentNotificationOptimizationInput - The input type for the paymentNotificationOptimization function.
 * - PaymentNotificationOptimizationOutput - The return type for the paymentNotificationOptimization function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PaymentNotificationOptimizationInputSchema = z.object({
  paymentDueDate: z.string().describe('The due date of the payment (ISO format).'),
  transactionHistory: z.string().describe('The transaction history of the user, as a JSON string.'),
  userPreferences: z.string().describe('The user preferences for notifications, as a JSON string.'),
  paymentAmount: z.number().describe('The amount of the payment.'),
});
export type PaymentNotificationOptimizationInput = z.infer<typeof PaymentNotificationOptimizationInputSchema>;

const PaymentNotificationOptimizationOutputSchema = z.object({
  notificationMessage: z.string().describe('The optimized notification message to send to the user.'),
  deliveryTime: z.string().describe('The optimized delivery time for the notification (ISO format).'),
});
export type PaymentNotificationOptimizationOutput = z.infer<typeof PaymentNotificationOptimizationOutputSchema>;

export async function paymentNotificationOptimization(input: PaymentNotificationOptimizationInput): Promise<PaymentNotificationOptimizationOutput> {
  return paymentNotificationOptimizationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'paymentNotificationOptimizationPrompt',
  input: {schema: PaymentNotificationOptimizationInputSchema},
  output: {schema: PaymentNotificationOptimizationOutputSchema},
  prompt: `You are an AI assistant that optimizes payment notifications for users.

  Given the payment due date, transaction history, user preferences, and payment amount, you will generate an optimized notification message and delivery time.

  Payment Due Date: {{{paymentDueDate}}}
  Transaction History: {{{transactionHistory}}}
  User Preferences: {{{userPreferences}}}
  Payment Amount: {{{paymentAmount}}}

  Optimize the notification message and delivery time to ensure the user is informed and avoids late payments.

  Output the notification message and delivery time in the following JSON format:
  {
    "notificationMessage": "The optimized notification message to send to the user.",
    "deliveryTime": "The optimized delivery time for the notification (ISO format)."
  }`,
});

const paymentNotificationOptimizationFlow = ai.defineFlow(
  {
    name: 'paymentNotificationOptimizationFlow',
    inputSchema: PaymentNotificationOptimizationInputSchema,
    outputSchema: PaymentNotificationOptimizationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
